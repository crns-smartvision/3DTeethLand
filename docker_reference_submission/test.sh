#!/usr/bin/env bash

SCRIPTPATH="$( cd "$(dirname "$0")" ; pwd -P )"

./build.sh

#VOLUME_SUFFIX=$(dd if=/dev/urandom bs=32 count=1 | md5sum | cut --delimiter=' ' --fields=1)
MEM_LIMIT="4g"  # Maximum is currently 30g, configurable in your algorithm image settings on grand challenge


# Do not change any of the parameters to docker run, these are fixed
docker run --rm \
        --memory="${MEM_LIMIT}" \
        --memory-swap="${MEM_LIMIT}" \
        --network="none" \
        --cap-drop="ALL" \
        --security-opt="no-new-privileges" \
        --shm-size="128m" \
        --pids-limit="256" \
        -v $SCRIPTPATH/input/:/input/ \
        -v $SCRIPTPATH/output/:/output/ \
        3dteethland_processing


docker run --rm \
        -v $SCRIPTPATH/output/:/output/ \
        python:3.9-slim python3 -c "import csv, sys; read_csv = lambda f: list(csv.reader(open(f))); f1, f2 = read_csv('/output/predictions.csv'), read_csv('/output/expected_output.csv'); sys.exit(f1 != f2)"
if [ $? -eq 0 ]; then
    echo "Tests successfully passed..."
else
    echo "Expected output do not correspond to output generated by the container..."
fi